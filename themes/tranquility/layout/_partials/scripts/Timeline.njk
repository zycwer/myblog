{% macro timeline(data) %}
  <script type="text/javascript">
    const timelineData = {{ data | dump }}
    const {types, posts} = timelineData
    listEl = document.querySelector("#timeline-list");

    elRefs = getElRefs(types)
    bindListener(types, elRefs)

    setTimeout(init.bind(this, types, elRefs))

    function getElRefs(types) {
      return types.map(type => document.querySelector(`#radio-${type}`))
    }

    function bindListener(names, els) {
      names.map((name, i) => els[i].addEventListener('change', e => updateList(name, e.target.checked)))
    }

    function updateList(type, value) {
      listDom
        .filter(line => line.type === type)
        .forEach(line => {
          line.el.className = line
            .el
            .className
            .replace(
              /(--hidden)?$/, value
              ? ""
              : "--hidden");
        });
    }

    const listDom = posts.map(t => getLine(t));
    listEl.append(...listDom.map(i => i.el));

    function getLine(data) {
      const item = document.createElement("DIV");
      item.className = `timeline-item-${data.type} timeline-item--hidden`;
      item.innerHTML = `
                          <div class="line-date">
                          <div class="line-date-tag">${data.date}</div></div>
                          <div class="line-anchor"></div>
                          <div class="line-title">
                              <img class="text-icon" src="${data.icon}" /><a class="timeline-post" href="${data.path}">${data.title}</a>
                          </div>
                          `;
      return {el: item, type: data.type};
    };

    function init(names, els) {
      names.map((name, i) => updateList(name, els[i].checked))
    }
  </script>
{% endmacro %}